name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build  # ✅ This ensures the build folder is created

    - name: Verify build folder
      run: ls -la build  # ✅ Confirm 'build/' exists before copying in Docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Authenticate with AWS
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Log in to AWS ECR
    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 703674122474.dkr.ecr.us-east-1.amazonaws.com

    # Ensure the repository exists before pushing
    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names my-react-app || \
        aws ecr create-repository --repository-name my-react-app

    # Build and push Docker image
    - name: Build Docker image
      run: |
        docker build -t my-react-app .

    # Tag Docker image
    - name: Tag Docker image
      run: |
        docker tag my-react-app:latest 703674122474.dkr.ecr.us-east-1.amazonaws.com/my-react-app:latest

    #Push Docker image
    - name: Push Docker image to ECR
      run: |
        docker push 703674122474.dkr.ecr.us-east-1.amazonaws.com/my-react-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up kubectl
      uses: aws-actions/eks-helm-kubectl-action@v1
      with:
        cluster-name: my-eks-cluster
        region: us-east-1

    - name: Deploy to EKS using kubectl
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Verify Deployment Status
      run: |
        kubectl rollout status deployment my-react-app

    - name: Verify Service Status
      run: |
        kubectl get svc my-react-app-service
        kubectl get svc my-react-service
